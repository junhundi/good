<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         version="3.0">

    <display-name>junhun</display-name>

<!--     <context-param> -->
<!--         <param-name>webAppRootKey</param-name> -->
<!--         <param-value>dayday.root</param-value> -->
<!--     </context-param> -->

    <welcome-file-list>
        <welcome-file>/index.jsp</welcome-file>
    </welcome-file-list>

    <!-- 指定log4j.properties配置文件的位置 -->
    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>classpath:log4j.properties</param-value>
    </context-param>

    <!-- 指定Spring的配置文件 -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath*:applicationContext*.xml</param-value>
    </context-param>

    <!--sql注入检查-->
<!--     <filter> -->
<!--         <filter-name>sqlInjectionFilter</filter-name> -->
<!--         <filter-class>com.roin.filter.SqlInjectionFilter</filter-class> -->
<!--     </filter> -->

<!--     <filter-mapping> -->
<!--         <filter-name>sqlInjectionFilter</filter-name> -->
<!--         <url-pattern>/*</url-pattern> -->
<!--     </filter-mapping> -->

    <!-- 编码过滤器 -->
    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <async-supported>true</async-supported>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
    </filter>

    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!--shiro权限-->
<!--     <filter> -->
<!--         <filter-name>shiroFilter</filter-name> -->
<!--         <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class> -->
<!--     </filter> -->

<!--     <filter-mapping> -->
<!--         <filter-name>shiroFilter</filter-name> -->
<!--         <url-pattern>/*</url-pattern> -->
        <!-- 动态请求页面中的标签是通过REQUEST获取的，
		        而静态装饰页面中的标签是通过FORWARD或者INCLUDE获取的，
		        否则在解析标签时获取不到当前用户的subject信息 -->
<!--         <dispatcher>REQUEST</dispatcher> -->
<!--         <dispatcher>FORWARD</dispatcher> -->
<!--         <dispatcher>INCLUDE</dispatcher> -->
<!--     </filter-mapping> -->

    <!-- 指定以Listener方式启动Log4j -->
    <listener>
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
    </listener>

    <!-- Spring监听器 -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <!-- 防止Spring内存溢出监听器 -->
    <listener>
        <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
    </listener>

    <!-- 使代码都可以直接通过RequestContextHolder获取到请求对象 -->
    <listener>
        <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
    </listener>

    <!-- springMVC子容器 -->
<!--     <servlet> -->
<!--         <servlet-name>SpringMVC</servlet-name> -->
<!--         <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class> -->
<!--         <init-param> -->
<!--             <param-name>contextConfigLocation</param-name> -->
<!--             <param-value>classpath:spring-mvc.xml</param-value> -->
<!--         </init-param> -->
<!--         <load-on-startup>1</load-on-startup> -->
<!--         <async-supported>true</async-supported> -->
<!--     </servlet> -->

<!--     <servlet-mapping> -->
<!--         <servlet-name>SpringMVC</servlet-name> -->
<!--         <url-pattern>/</url-pattern> -->
<!--     </servlet-mapping> -->

	<!-- 配置springmvc的前端控制器 -->
	<servlet>
		<servlet-name>springmvc-web</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:springmvc.xml</param-value>
		</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>springmvc-web</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>


    <!-- 连接池 启用Web监控统计功能 start -->
    <filter>
        <filter-name>DruidWebStatFilter</filter-name>
        <filter-class>com.alibaba.druid.support.http.WebStatFilter</filter-class>
        <init-param>
            <param-name>exclusions</param-name>
            <param-value>*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>DruidWebStatFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <servlet>
        <servlet-name>DruidStatView</servlet-name>
        <servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>
        <init-param>
            <!-- 用户名 -->
            <param-name>loginUsername</param-name>
            <param-value>druid</param-value>
        </init-param>
        <init-param>
            <!-- 密码 -->
            <param-name>loginPassword</param-name>
            <param-value>Cn123456</param-value>
        </init-param>
    </servlet>
    <servlet-mapping>
        <servlet-name>DruidStatView</servlet-name>
        <url-pattern>/druid/*</url-pattern>
    </servlet-mapping>
    <!-- 连接池 启用Web监控统计功能 end -->

</web-app>